{"version":3,"sources":["../../../api/controllers/requestsController.js"],"names":["global","data","id","name","email","date","dept","message","Url","get_all_requests","req","res","length","status","json","end","get_a_request","parseInt","params","requestId","i","create_a_request","body","push","modify_a_request","delete_a_request","splice"],"mappings":"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","file":"requestsController.js","sourcesContent":["global.data = [\r\n  {\r\n    id: 110,\r\n    name: 'John doe',\r\n    email: 'example@gmail.com',\r\n    date: '2018-10-13',\r\n    dept: 'Accounts',\r\n    message: 'Lorem ipsum ',\r\n    Url: '/api/v1/users/requests/110',\r\n  },\r\n\r\n  {\r\n    id: 120,\r\n    name: 'Jane doe',\r\n    email: 'janedoe@gmail.com',\r\n    date: '2014-1-25',\r\n    dept: 'Engineering',\r\n    message: 'Lorem ipsum Lorem ipsum Lorem',\r\n    Url: '/api/v1/users/requests/120',\r\n  },\r\n  {\r\n    id: 130,\r\n    name: 'Frank Moore',\r\n    email: 'frankmoore@examplemail.me',\r\n    date: '2011-8-1',\r\n    dept: 'Logistics',\r\n    message: 'Lorem ipsum Lorem ipsum Lorem ipsum ',\r\n    Url: '/api/v1/users/requests/130',\r\n  },\r\n];\r\n\r\nexport default {\r\n  get_all_requests: (req, res) => {\r\n    if (global.data.length !== 0) {\r\n      return res.status(200)\r\n        .json({\r\n          status: 'Success',\r\n          data: global.data,\r\n        });\r\n    }\r\n    return res.status(204)\r\n      .end();\r\n  },\r\n\r\n\r\n  get_a_request: (req, res) => {\r\n    const id = parseInt(req.params.requestId, 10);\r\n    for (let i = 0; i < global.data.length; i += 1) {\r\n      if (global.data[i].id === id) {\r\n        return res.status(200)\r\n          .json({\r\n            status: 'Success',\r\n            data: global.data[i],\r\n          });\r\n      }\r\n    }\r\n    return res.status(404)\r\n      .json({\r\n        status: 'fail',\r\n        message: 'Not found',\r\n      });\r\n  },\r\n\r\n  create_a_request: (req, res) => {\r\n    if (typeof req.body.id === 'number') {\r\n      req.body.Url = `/api/v1/users/requests/${req.body.id}`;\r\n      global.data.push(req.body);\r\n      return res.status(201)\r\n        .json({\r\n          status: 'Success',\r\n          message: 'Request Created successfully',\r\n        });\r\n    }\r\n    return res.status(400)\r\n      .json({\r\n        status: 'Fail',\r\n        message: 'Bad Request',\r\n      });\r\n  },\r\n\r\n  modify_a_request: (req, res) => {\r\n    const id = parseInt(req.params.requestId, 10);\r\n    for (let i = 0; i < global.data.length; i += 1) {\r\n      if (global.data[i].id === id) {\r\n        global.data[i].name = req.body.name;\r\n        global.data[i].email = req.body.email;\r\n        global.data[i].date = req.body.date;\r\n        global.data[i].dept = req.body.dept;\r\n        global.data[i].message = req.body.message;\r\n        return res.status(200)\r\n          .json({\r\n            status: 'Success',\r\n            data: global.data[i],\r\n          });\r\n      }\r\n    }\r\n    return res.status(404)\r\n      .json({\r\n        status: 'fail',\r\n        message: 'Not found',\r\n      });\r\n  },\r\n\r\n  delete_a_request: (req, res) => {\r\n    const id = parseInt(req.params.requestId, 10);\r\n    for (let i = 0; i < global.data.length; i += 1) {\r\n      if (global.data[i].id === id) {\r\n        global.data.splice(i, 1);\r\n        return res.status(200)\r\n          .json({\r\n            status: 'Success',\r\n            message: 'Request deleted successfully',\r\n          });\r\n      }\r\n    }\r\n    return res.status(404)\r\n      .json({\r\n        status: 'Fail',\r\n        message: 'Not found',\r\n      });\r\n  },\r\n};\r\n"]}